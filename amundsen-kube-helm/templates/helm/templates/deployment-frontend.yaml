---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "amundsen.fullname" . }}-{{ .Values.frontEnd.serviceName }}
  labels:
    app: {{ template "amundsen.name" . }}
    component: {{ .Values.frontEnd.serviceName }}
    chart: {{ template "amundsen.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "amundsen.name" . }}
      component: {{ .Values.frontEnd.serviceName }}
      release: {{ .Release.Name }}
  replicas: {{ default 1 .Values.frontEnd.replicas }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-frontend.yaml") . | sha256sum }}
      {{- with default .Values.podAnnotations .Values.frontEnd.podAnnotations }}
{{ toYaml . | indent 8 }}
      {{- end }}
      labels:
        app: {{ template "amundsen.name" . }}
        component: {{ .Values.frontEnd.serviceName }}
        release: {{ .Release.Name }}
    spec:
      {{- with default .Values.nodeSelector .Values.frontEnd.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with default .Values.affinity .Values.frontEnd.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with default .Values.tolerations .Values.frontEnd.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
    {{- if .Values.frontEnd.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.frontEnd.imagePullSecrets | indent 8 }}
    {{- end }}
      containers:
      - name: {{ .Chart.Name }}-{{ .Values.frontEnd.serviceName }}
        image: {{ .Values.frontEnd.image }}:{{ .Values.frontEnd.imageTag }}
        imagePullPolicy: Always
        ports:
          - containerPort: 5000
        envFrom:
          - configMapRef:
              name: {{ template "amundsen.fullname" . }}-{{ .Values.frontEnd.serviceName }}
        command: ["gunicorn"]
        args: ['-w', '4', '--bind', ':5000', 'amundsen_application.wsgi']
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: "/healthcheck"
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        {{- with .Values.frontEnd.resources }}
        resources:
{{ toYaml . | indent 10 }}
        {{- end }}
